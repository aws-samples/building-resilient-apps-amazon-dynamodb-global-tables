AWSTemplateFormatVersion: "2010-09-09"

# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

Description: >
  This template exercises the DynamoDB five-9s sample application (SO9447).

Parameters:
  ProjectTag:
    Type: String
    Default: "Dynamo59"
  Bucket:
    Type: String

Resources:

  StatesExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: 
                  - !GetAtt CreateData.Arn
                  - !GetAtt CreateOrder.Arn
              - Effect: Allow
                Action:
                  - states:StartExecution
                  - states:DescribeExecution
                  - states:StopExecution
                Resource: 
                  - !Join ["", ["arn:aws:states:", !Ref AWS::Region, ":", !Ref AWS::AccountId, ":stateMachine:*"]]
              - Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: "*"

  TestStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        !Sub
          - |-
            {
              "Comment": "Exercises the API to create and read orders",
              "StartAt": "Create-Data",
              "States": {
                "Create-Data": {
                  "Type": "Task",
                  "Resource": "${CreateDataArn}",
                  "Catch": [{
                    "ErrorEquals": ["States.ALL"],
                    "ResultPath": "$.error",
                    "Next": "FailState"
                  }],
                  "InputPath": "$",
                  "OutputPath": "$",
                  "ResultPath": "$.create",
                  "Next": "Process-Data"
                },
                "Process-Data": {
                  "Type": "Map",
                  "InputPath": "$",
                  "ItemsPath": "$.create.items",
                  "MaxConcurrency": 1,
                  "Parameters": {
                    "order.$": "$$.Map.Item.Value",
                    "url.$": "$.url"
                  },
                  "Iterator": {
                    "StartAt": "CreateOrder",
                    "States": {
                      "CreateOrder": {
                        "Type": "Task",
                        "Resource": "${CreateOrderArn}",
                        "Next": "WaitOrder"
                      },
                      "WaitOrder": {
                        "Type": "Wait",
                        "Seconds": 1,
                        "End": true
                      }
                    }
                  },
                  "OutputPath": "$",
                  "ResultPath": "$.runner",
                  "End": true
                },
                "FailState": {
                  "Type": "Fail",
                  "Cause": "$.error",
                  "Error": "$.error"
                }
              }
            }
          - CreateDataArn: !GetAtt [CreateData, Arn]
            CreateOrderArn: !GetAtt [CreateOrder, Arn]

      RoleArn: !GetAtt [StatesExecutionRole, Arn]

  CreateData:
    Type: AWS::Lambda::Function
    Properties:
      Description: Hits the API to generate test data
      Handler: test-suite-create.lambda_handler
      Runtime: python3.9
      Timeout: 60
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Ref Bucket
        S3Key: lambda/test-suite.zip
      Environment:
        Variables:
          MAX_BATCH_SIZE: 25

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub lambda.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:Invoke
                Resource: "*"

  CreateOrder:
    Type: AWS::Lambda::Function
    Properties:
      Description: Hits the API to create and then read an order
      Handler: test-suite-read.lambda_handler
      Runtime: python3.9
      Timeout: 60
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Ref Bucket
        S3Key: lambda/test-suite.zip


Outputs:
  WorkflowName:
    Value: !GetAtt TestStateMachine.Name
  WorkflowArn:
    Value: !Ref TestStateMachine
